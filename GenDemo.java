// Пример обобщеного класса. Т какой-нибудь тип данных
class Gen <T>{
	//Объявление объекта с типом Т
	T  ob;

	//Конструктор, получающий ссылку на  объект типа Т
	Gen (T o){
		ob = o;
	}
	
	//Метод, возвращающий ссылку на объект 
	T getOb(){
	return ob;
	}
	// Метод, отображающий информацию о типе объекта(Т)
	void showType()
	{
		System.out.println("Тип Т: "+ob.getClass().getName());
	}

}
class GenDemo {
	public static void main(String[] args){
		//Создаем переменную класса Gen <Integer>. Все оперции будут выполнясть для тип данных Integer;
		Gen <Integer> iob;
		//Присваиваем ссылку на объект Integer со значением 102
		iob = new Gen <Integer>(102);
		//Выполняем отображение информации о текущем типе данных для объекта, доступного по ссылке iob 
		iob.showType();
		//Получаем целое значение,хранящееся в iob

		int v = iob.getOb();
		System.out.println("Значение : " + v);
		System.out.println();
	
		//Создаем переменную класса Gen <String>
		Gen <String> strOb = new Gen<String>("Строка в качестве обобщенного типа данных");
		//Выполняем отображение информации о текущем типе данных для объекта, доступного по ссылке iob
                strOb.showType();
                //Получаем целое значение,хранящееся в iob
		System.out.println("Значение : " + strOb.getOb());
		
		//Попытка присвоить переменной iob ссылку на объект с типом double
		//iob = new Gen <Double> (102.0); Компилятор предотвращает неккоректное приваивание ссылки на объект чужого типа данных
		
		Gen <Double> dOb = new Gen <Double> (102.0);
		// Попытка присвоить ссылку на объект "чужого " типа данных блокиует компилятором
		//iob = dOb;
	}
}
